#!/usr/bin/env bash
# This script will be used to install dependencies for all the {{cookiecutter.project_name}} applications

# setup the git identities
git config --global user.name "{{cookiecutter.github_name}}"
git config --global user.email "{{cookiecutter.github_email}}"

# remove the default fish shell prompt
set fish_greeting

# install Gitzer to the system
curl -sSL https://raw.githubusercontent.com/IgnisDa/Gitzer/main/get-gitzer.py | python3

# replace the default file content viewer (cat) with bat
sudo ln -s /usr/bin/batcat /usr/bin/bat
# load all my system configs
rm -rf $HOME/.config
git clone https://github.com/IgnisDa/linux-configs.git $HOME/.config


# load the custom scripts and make only files which contain `~ADD_SCRIPT~` in them
# executable
CUSTOM_SCRIPTS_DIR="$HOME/custom-scripts"
git clone https://github.com/IgnisDa/custom-scripts.git $CUSTOM_SCRIPTS_DIR
for file in "$CUSTOM_SCRIPTS_DIR"/*; do
    if grep -Fq "~ADD_SCRIPT~" "$file"; then
        chmod +x "$file"
    fi
done

# use the starship prompt
curl -fsSL https://starship.rs/install.sh > /tmp/install.sh
chmod +x /tmp/install.sh
/tmp/install.sh --force

# rust installer
curl https://sh.rustup.rs -sSf | sh -s -- -y

# set the default interactive shell as fish
rm -rf "$HOME/.bashrc"
ln -s "$HOME/.config/.bashrc" "$HOME/.bashrc"


# directory path of django development server
backend_folder="{{cookiecutter.django_project_name}}"
# directory path of nuxt development server
frontend_folder="{{cookiecutter.nuxt_project_name}}"
# directory path of documentation development server
documentation_folder="{{cookiecutter.docs_project_name}}"


# we prefer not to keep the virtual environment as a part of the synced directory for
# performance reasons, hence we create a folder to store all of them and use symbolic links
# for the project purposes
# first we create a directory where our custom scripts are stored
cd "$HOME/{{cookiecutter.project_name}}"
# install the dependencies for the django application
cd "$backend_folder"
poetry config virtualenvs.in-project "true"
eval "$CUSTOM_SCRIPTS_DIR/setup"

# change to the project folder
cd "$HOME/{{cookiecutter.project_name}}"
# install the dependencies for the frontend application
cd "$frontend_folder"
eval "$CUSTOM_SCRIPTS_DIR/setup"

# change to the project folder
cd "$HOME/{{cookiecutter.project_name}}"
# install the dependencies for the documentation application
cd "$documentation_folder"
eval "$CUSTOM_SCRIPTS_DIR/setup"
